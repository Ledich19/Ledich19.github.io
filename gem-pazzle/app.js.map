{"version":3,"file":"app.js","mappings":";;;;;;;;;;;;;;;;AAAA;AACgH;AAChH,yCAAyC,6IAAqD;AAC9F;AACA,sCAAsC,uFAAwC;AAC9E;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACPnB;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;ACHnB;AACA;AACA;AACA,iEAAe,IAAI;;;;;;;;;;ACHN;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;;AAGJ;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACzBA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;ACAA;;;;;;;;;;;;;;;;;;;;;;ACA4B;AACU;AACP;AACc;AACQ;AACL;;AAEhD;AACA;AACA,EAAE,uDAAc,CAAC,uDAAa,CAAC,sDAAa;AAC5C,EAAE,2DAAkB;AACpB,EAAE,mEAAY;AACd;AACA;AACA;AACA,kBAAkB,uDAAc;AAChC,cAAc,2DAAkB,mBAAmB,2DAAkB;AACrE,WAAW,uDAAc;AACzB,UAAU,sDAAa;AACvB,cAAc,0DAAiB;AAC/B;AACA;AACA;AACA;AACA,EAAE,8DAAW;AACb;AACA;AACA,MAAM,uDAAc;AACpB,IAAI,uDAAc;AAClB;AACA;AACA,IAAI;AACJ,IAAI,uDAAc;AAClB;AACA;AACA;AACA;AACO;AACP;AACA,EAAE,2DAAkB;AACpB,EAAE,mEAAY;AACd;;AAEA;AACA;AACA;AACA,kBAAkB,0DAAI;AACtB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,iEAAe,YAAY;;;;;;;;;;;;;;;;;;;;ACjEF;AAC8B;AACf;AACM;AACA;;AAE9C;AACA;AACA;AACA,aAAa,sEAAY;AACzB,aAAa,gEAAS;AACtB,aAAa,wDAAW;AACxB,aAAa,gEAAS;AACtB;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;;;;;;;AChB6B;AACtB;AACsB;AAChC;;AAErB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,uDAAc;AACrC;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB,mBAAmB;AACrC,oBAAoB,mBAAmB;AACvC;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEO;AACP,uBAAuB,uDAAc;AACrC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,sDAAa;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA,sBAAsB,uDAAc;AACpC,eAAe,sDAAa;AAC5B;AACA;;AAEA;;AAEA,sBAAsB,wBAAwB;AAC9C,wBAAwB,6BAA6B;AACrD;AACA;;AAEA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,8BAA8B,YAAY;AAC1C;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA,QAAQ,uDAAc;AACtB;AACA;;AAEA,IAAI,kEAAY;AAChB,QAAQ,kDAAQ,CAAC,uDAAc,IAAI,0DAAiB;AACpD;AACA;AACA,8DAA8D,qDAAW;AACzE,QAAQ,2DAAkB;AAC1B,SAAS,IAAI,uDAAc,IAAI;AAC/B;AACA;AACA,YAAY,2DAAkB;AAC9B;AACA,UAAU,2DAAkB;AAC5B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU,0DAAiB;AAC3B;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;;AAEA;AACA,QAAQ,0DAAiB;AACzB;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA,iEAAe,WAAW;;;;;;;;;;;;;;;;;;;;;ACxTD;AACU;AACJ;AACY;;AAE3C;AACA;AACA;AACA,kBAAkB,uDAAI;AACtB;AACA;;AAEO;AACP;AACA,EAAE,uDAAc;AAChB,kCAAkC,uDAAc;AAChD;;AAEA;AACA;AACA,oBAAoB,2DAAkB;AACtC,yBAAyB,qDAAW;AACpC;AACO;AACP;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;;;;;;;AC3BC;AACU;AACJ;AACiC;;AAEX;;AAErD;AACA;AACA;AACA,kBAAkB,uDAAI;;AAEtB;AACA;AACA,YAAY,OAAO;AACnB;AACA,gEAAgE,KAAK,GAAG,KAAK;AAC7E;AACA,MAAM,sDAAa;AACnB,MAAM,2DAAkB;AACxB,MAAM,mEAAY;AAClB,MAAM,uDAAc,CAAC,uDAAa,CAAC,sDAAa;AAChD,MAAM,0DAAiB,CAAC,2DAAiB;AACzC;AACA,GAAG;;AAEH;AACA;;AAEA,iEAAe,SAAS;;;;;;;;;;;;;;;;;;AC7BD;AACQ;;AAE/B;AACA,eAAe,sDAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,2CAA2C,KAAK,GAAG,KAAK;AACxD;AACA;AACA;AACA;AACA;AACA,sBAAsB,yDAAgB;AACtC;AACA;AACA;AACA;AACA,mCAAmC,UAAU;AAC7C,mCAAmC,UAAU;AAC7C,mCAAmC,WAAW;AAC9C;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEO;AACP;AACA;;AAEA,iEAAe,aAAa;;;;;;;;;;;;;;;;;;;;ACvC5B;AACA;AACA;AACO;AACP;AACA;AACA,kBAAkB,WAAW;AAC7B;AACA,oBAAoB,WAAW;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,kBAAkB,aAAa;AAC/B;AACA;AACA;AACA;AACA;AACO;AACP;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC,oBAAoB,mBAAmB;AACvC;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;;AAEA,kBAAkB,WAAW;AAC7B;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA,eAAe,IAAI;AACnB;AACA;AACA;AACO;AACP;AACA;AACA,cAAc,2BAA2B,GAAG,2BAA2B;AACvE;AACA;AACA;;;;;;;;;;;;;;;;AChGuC;;AAEvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,qDAAW;AACvB;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;;UCrHpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;;;;WCzBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,GAAG;WACH;WACA;WACA,CAAC;;;;;WCPD;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WCfA;;WAEA;WACA;WACA;WACA;WACA;WACA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;WAEA;;;;;;;;;;;;;;;;ACrBwD;AACD;AACoB;AAClC;AACd;;AAE3B,qBAAqB,2EAAS;AAC9B,sEAAY;AACZ,4EAAU;AACV,2DAAkB;AAClB,uDAAc,CAAC,uDAAa,CAAC,sDAAa;;AAE1C;AACA;AACA;AACA;AACA;AACA,IAAI,uDAAc;;AAElB,IAAI,8EAAY;AAChB,IAAI,0DAAiB;AACrB,IAAI,2DAAkB;AACtB,IAAI,sDAAa;AACjB,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,yDAAgB;AAClB","sources":["webpack:///./src/components/buttonsPanel/buttonsPanel.html","webpack:///./src/components/infoPanel/infoPanel.html","webpack:///./src/components/sizePanel/sizePanel.html","webpack:///./node_modules/html-loader/dist/runtime/getUrl.js","webpack:///./src/components/buttonsPanel/buttonsPanel.scss?749e","webpack:///./src/components/container/container.scss?000d","webpack:///./src/components/field/field.scss?0bdf","webpack:///./src/components/infoPanel/infoPanel.scss?2765","webpack:///./src/components/sizePanel/sizePanel.scss?f71c","webpack:///./src/components/winList/winList.scss?64c1","webpack:///./src/components/buttonsPanel/buttonsPanel.js","webpack:///./src/components/container/container.js","webpack:///./src/components/field/field.js","webpack:///./src/components/infoPanel/infoPanel.js","webpack:///./src/components/sizePanel/sizePanel.js","webpack:///./src/components/winList/winList.js","webpack:///./src/helpers.js","webpack:///./src/store.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/compat get default export","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/global","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///webpack/runtime/publicPath","webpack:///webpack/runtime/jsonp chunk loading","webpack:///./src/index.js"],"sourcesContent":["// Imports\nimport ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___ from \"../../../node_modules/html-loader/dist/runtime/getUrl.js\";\nvar ___HTML_LOADER_IMPORT_0___ = new URL(\"../../assets/icons/volume-high.svg\", import.meta.url);\n// Module\nvar ___HTML_LOADER_REPLACEMENT_0___ = ___HTML_LOADER_GET_SOURCE_FROM_IMPORT___(___HTML_LOADER_IMPORT_0___);\nvar code = \"<button data-shuffle class=\\\"buttonsPanel__shuffle\\\">Shuffle and start</button>\\r\\n<button data-stop class=\\\"buttonsPanel__stop\\\" disabled>Stop</button>\\r\\n<button data-save class=\\\"buttonsPanel__save\\\">Save</button>\\r\\n<button data-audio class=\\\"buttonsPanel__audio\\\"><img src=\\\"\" + ___HTML_LOADER_REPLACEMENT_0___ + \"\\\"/></button>\\r\\n<button data-results class=\\\"buttonsPanel__results\\\">Results</button>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div class=\\\"infoPanel__moves\\\">Moves:<span class=\\\"infoPanel__moves-value\\\">0</span></div>\\r\\n<div class=\\\"infoPanel__times\\\">Times:<span class=\\\"infoPanel__times-value\\\">00:00</span></div>\";\n// Exports\nexport default code;","// Module\nvar code = \"<div class=\\\"sizePanel__size\\\">Frame size: <span>4x4</span></div>\\r\\n<div class=\\\"sizePanel__other-size\\\">\\r\\n  <a href=\\\"#\\\" data-size=\\\"3\\\" class=\\\"sizePanel__btn-size\\\">3x3</a>\\r\\n  <a href=\\\"#\\\" data-size=\\\"4\\\" class=\\\"sizePanel__btn-size\\\">4x4</a>\\r\\n  <a href=\\\"#\\\" data-size=\\\"5\\\" class=\\\"sizePanel__btn-size\\\">5x5</a>\\r\\n  <a href=\\\"#\\\" data-size=\\\"6\\\" class=\\\"sizePanel__btn-size\\\">6x6</a>\\r\\n  <a href=\\\"#\\\" data-size=\\\"7\\\" class=\\\"sizePanel__btn-size\\\">7x7</a>\\r\\n  <a href=\\\"#\\\" data-size=\\\"8\\\" class=\\\"sizePanel__btn-size\\\">8x8</a>\\r\\n</div>\\r\\n<div class=\\\"sizePanel__text\\\">\\r\\n  <h3 >Немного объяснений :)</h3>\\r\\n  <ol>\\r\\n    <li>Раскладка решаема 100%</li>\\r\\n    <li>Чтобы начать игру нажать <b>Shuffle and start</b></li>\\r\\n    <li>Без начала игры будет только сообщение о победе,\\r\\n      но результат не пойдет в таблицу.\\r\\n    </li>\\r\\n    <li></li>\\r\\n  </ol>\\r\\n</div>\";\n// Exports\nexport default code;","\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    // eslint-disable-next-line no-param-reassign\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  } // eslint-disable-next-line no-underscore-dangle, no-param-reassign\n\n\n  url = String(url.__esModule ? url.default : url);\n\n  if (options.hash) {\n    // eslint-disable-next-line no-param-reassign\n    url += options.hash;\n  }\n\n  if (options.maybeNeedQuotes && /[\\t\\n\\f\\r \"'=<>`]/.test(url)) {\n    return \"\\\"\".concat(url, \"\\\"\");\n  }\n\n  return url;\n};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","// extracted by mini-css-extract-plugin\nexport {};","import './buttonsPanel.scss'\nimport html from './buttonsPanel.html'\nimport store from '../../store'\nimport { shuffleMatrix } from '../../helpers'\nimport { visibleMoves } from '../infoPanel/infoPanel'\nimport { showWinList } from '../winList/winList'\n\nconst handleShuffle = () => {\n  document.querySelector('.buttonsPanel__stop').disabled = false\n  store.setField(shuffleMatrix(store.getSize()))\n  store.setTimeStart(Date.now())\n  visibleMoves(0)\n}\nconst handleSave = () => {\n  const rssGemPuzzleSaveObject = {\n    dataPosition: store.getField(),\n    gameTime: store.getTimeStart() ? (Date.now() - store.getTimeStart()) : null,\n    moves: store.getMoves(),\n    size: store.getSize(),\n    winField: store.getWinField(),\n  }\n  localStorage.setItem('rssGemPuzzleSaveObject', JSON.stringify(rssGemPuzzleSaveObject))\n}\nconst handleResults = () => {\n  showWinList()\n}\nconst handleAudio = (e) => {\n  if (store.getAudio()) {\n    store.setAudio(false)\n    e.style.background = '#e69096'\n    e.innerHTML = '<img src=\"./assets/icons/volume-mute2.svg\"/>'\n  } else {\n    store.setAudio(true)\n    e.style.background = '#90e690'\n    e.innerHTML = '<img src=\"./assets/icons/volume-high.svg\"/>'\n  }\n}\nexport const handlerStop = () => {\n  document.querySelector('.buttonsPanel__stop').disabled = true\n  store.setTimeStart(null)\n  visibleMoves(0)\n}\n\nconst buttonsPanel = () => {\n  const div = document.createElement('div')\n  div.className = 'buttonsPanel'\n  div.innerHTML = html\n  div.addEventListener('click', (e) => {\n    e.preventDefault()\n    if (e.target.dataset.shuffle !== undefined) {\n      handleShuffle()\n    } else if (e.target.dataset.stop !== undefined) {\n      handlerStop()\n    } else if (e.target.dataset.save !== undefined) {\n      handleSave()\n    } else if (e.target.dataset.results !== undefined) {\n      handleResults()\n    } else if (e.target.closest('button').dataset.audio !== undefined) {\n      handleAudio(e.target.closest('button'))\n    }\n  })\n\n  return div\n}\n\nexport default buttonsPanel\n","import './container.scss'\nimport buttonsPanel from '../buttonsPanel/buttonsPanel'\nimport renderField from '../field/field'\nimport infoPanel from '../infoPanel/infoPanel'\nimport sizePanel from '../sizePanel/sizePanel'\n\nconst container = () => {\n  const div = document.createElement('div')\n  div.className = 'container'\n  div.append(buttonsPanel())\n  div.append(infoPanel())\n  div.append(renderField())\n  div.append(sizePanel())\n  return div\n}\n\nexport default container\n","import { checkWin, getTimePast } from '../../helpers'\nimport store from '../../store'\nimport { visibleMoves } from '../infoPanel/infoPanel'\nimport './field.scss'\n\nconst renderField = () => {\n  const canvas = document.createElement('canvas')\n  canvas.id = 'field'\n  return canvas\n}\nfunction getEmptyCell(item) {\n  const dataPosition = store.getField()\n  if (item) {\n    const emptyCell = (dataPosition[item.row]?.[item.col + 1] === 0 && {\n      row: item.row,\n      col: item.col + 1,\n    }) || (dataPosition[item.row]?.[item.col - 1] === 0 && {\n      row: item.row,\n      col: item.col - 1,\n    }) || (dataPosition[item.row - 1]?.[item.col] === 0 && {\n      row: item.row - 1,\n      col: item.col,\n    }) || (dataPosition[item.row + 1]?.[item.col] === 0 && {\n      row: item.row + 1,\n      col: item.col,\n    })\n    return emptyCell\n  }\n  return null\n}\nfunction stillOnHovered(clientX, clientY, celSize, hoveredItem) {\n  return (\n    hoveredItem && clientX > hoveredItem.x\n    && clientX < hoveredItem.x + celSize\n    && clientY > hoveredItem.y\n    && clientY < hoveredItem.y + celSize\n  )\n}\n\nfunction getCords(matrix, size) {\n  const result = []\n  for (let i = 0; i < matrix.length; i += 1) {\n    for (let j = 0; j < matrix.length; j += 1) {\n      result.push({\n        row: i, col: j, x: j * size, y: i * size,\n      })\n    }\n  }\n  return result\n}\n\nexport function fieldHandler() {\n  const dataPosition = store.getField()\n  const canvas = document.getElementById('field')\n  const container = document.querySelector('.container')\n  const context = canvas.getContext('2d')\n  let width = container.clientWidth - 10\n  const audio = new Audio('./assets/audio/puzzle-15_audio_move.mp3')\n\n  canvas.width = width\n  canvas.height = width\n\n  let hoveredItem = null\n  let movedItem = null\n  let shiftX = 0\n  let shiftY = 0\n  let delta = -1\n\n  let celCount = store.getSize()\n  let celSize = width / celCount\n  let coords = getCords(dataPosition, celSize)\n  let movement = false\n  window.addEventListener('resize', () => {\n    width = container.clientWidth - 10\n    canvas.width = width\n    canvas.height = width\n    celSize = width / celCount\n  })\n\n  function drawPlayField() {\n    const dataField = store.getField()\n    celCount = store.getSize()\n    celSize = width / celCount\n    coords = getCords(dataField, celSize)\n\n    context.clearRect(0, 0, width, width)\n\n    for (let row = 0; row < dataField.length; row += 1) {\n      for (let col = 0; col < dataField[row].length; col += 1) {\n        const dx = col * celSize\n        const dy = row * celSize\n\n        if (dataField[row][col]) {\n          context.beginPath()\n\n          if (hoveredItem && hoveredItem.x === dx && hoveredItem.y === dy) {\n            context.fillStyle = 'yellow'\n          } else {\n            context.fillStyle = 'white'\n          }\n\n          if (movedItem && movedItem.x === dx && movedItem.y === dy) {\n            shiftX = shiftX ? shiftX + delta : 0\n            shiftY = shiftY ? shiftY + delta : 0\n            if (shiftX > celSize || shiftY > celSize || shiftX < -celSize || shiftY < -celSize) {\n              delta = 0\n            }\n\n            context.rect(dx + shiftX, dy + shiftY, celSize, celSize)\n            context.fill()\n            context.font = `${celSize / 2}px monospace`\n            context.fillStyle = 'black'\n            context.textAlign = 'left'\n            context.textBaseline = 'top'\n\n            const txt = dataField[row][col]\n            const measuredText = context.measureText(txt)\n            const offset = celSize - measuredText.width\n\n            context.fillText(\n              dataField[row][col],\n              dx + shiftX + offset / 2,\n              dy + shiftY + celSize / 4,\n            )\n          } else {\n            context.rect(dx, dy, celSize, celSize)\n            context.fill()\n            context.font = `${celSize / 2}px monospace`\n            context.fillStyle = 'black'\n            context.textAlign = 'left'\n            context.textBaseline = 'top'\n\n            const txt = dataField[row][col]\n            const measuredText = context.measureText(txt)\n            const offset = celSize - measuredText.width\n\n            context.fillText(dataField[row][col], dx + offset / 2, dy + celSize / 4)\n          }\n\n          context.strokeStyle = 'red'\n          context.lineWidth = 5\n          context.stroke()\n          context.strokeStyle = 'black'\n          context.lineWidth = 1\n          context.stroke()\n        }\n      }\n    }\n    requestAnimationFrame(drawPlayField)\n  }\n  drawPlayField()\n\n  function getHoveredItem(clientX, clientY) {\n    return coords.find(\n      (c) => clientX > c.x && clientX < c.x + celSize && clientY > c.y && clientY < c.y + celSize,\n    )\n  }\n  canvas.addEventListener('mousemove', (e) => {\n    const clientX = e.offsetX\n    const clientY = e.offsetY\n    if (stillOnHovered(clientX, clientY, celSize, hoveredItem)) {\n      return\n    }\n    hoveredItem = getHoveredItem(clientX, clientY)\n  })\n\n  canvas.addEventListener('mouseout', () => {\n    hoveredItem = null\n  })\n\n  function checkWinner() {\n    if (store.getAudio()) {\n      audio.play()\n    }\n\n    visibleMoves(1)\n    if (checkWin(store.getField(), store.getWinField())) {\n      const winMessage = document.createElement('div')\n      winMessage.id = 'winMessage'\n      winMessage.innerHTML = `Ура! Вы решили головоломку за ${getTimePast(\n        store.getTimeStart(),\n      )} и ${store.getMoves()} ходов!`\n      document.body.append(winMessage)\n      window.setTimeout(() => {\n        if (store.getTimeStart()) {\n          const name = window.prompt('Write your name?', 'name')\n          store.addToWinList(name)\n        }\n        winMessage.remove()\n      }, 2000)\n    }\n  }\n  canvas.addEventListener('click', (e) => {\n    if (!movement) {\n      e.preventDefault()\n      movement = true\n      const clientX = e.offsetX\n      const clientY = e.offsetY\n\n      movedItem = getHoveredItem(clientX, clientY)\n      const emptyCell = getEmptyCell(movedItem)\n      if (emptyCell) {\n        if (emptyCell.row < movedItem.row && emptyCell.col === movedItem.col) {\n          shiftY = -1\n          shiftX = 0\n          delta = -celSize / 6\n        }\n        if (emptyCell.row === movedItem.row && emptyCell.col > movedItem.col) {\n          shiftX = 1\n          delta = celSize / 6\n          shiftY = 0\n        }\n        if (emptyCell.row > movedItem.row && emptyCell.col === movedItem.col) {\n          shiftY = 1\n          shiftX = 0\n          delta = celSize / 6\n        }\n        if (emptyCell.row === movedItem.row && emptyCell.col < movedItem.col) {\n          shiftX = -1\n          shiftY = 0\n          delta = -celSize / 6\n        }\n\n        setTimeout(() => {\n          shiftX = 0\n          shiftY = 0\n          delta = 0\n          store.changeField(emptyCell, movedItem)\n          hoveredItem = null\n          checkWinner()\n          movement = false\n        }, celSize)\n      }\n    }\n  })\n\n  canvas.addEventListener('mousedown', (e) => {\n    canvas.ondragstart = () => false\n\n    const clientX = e.offsetX\n    const clientY = e.offsetY\n    movedItem = getHoveredItem(clientX, clientY)\n    const emptyCell = getEmptyCell(movedItem)\n\n    function onMouseMove(element) {\n      element.preventDefault()\n      element.stopPropagation()\n\n      if (emptyCell && emptyCell.row < movedItem.row && emptyCell.col === movedItem.col) {\n        shiftY = element.offsetY - clientY\n        if (shiftY <= -celSize) {\n          shiftY = -celSize\n        }\n        if (shiftY >= 0) {\n          shiftY = 0\n        }\n      }\n      if (emptyCell.row === movedItem.row && emptyCell.col > movedItem.col) {\n        shiftX = element.offsetX - clientX\n        if (shiftX >= celSize) {\n          shiftX = celSize\n        }\n        if (shiftX <= 0) {\n          shiftX = 0\n        }\n      }\n      if (emptyCell.row > movedItem.row && emptyCell.col === movedItem.col) {\n        shiftY = element.offsetY - clientY\n        if (shiftY >= celSize) {\n          shiftY = celSize\n        }\n        if (shiftY <= 0) {\n          shiftY = 0\n        }\n      }\n      if (emptyCell.row === movedItem.row && emptyCell.col < movedItem.col) {\n        shiftX = element.offsetX - clientX\n        if (shiftX <= -celSize) {\n          shiftX = -celSize\n        }\n        if (shiftX >= 0) {\n          shiftX = 0\n        }\n      }\n      if (Math.abs(shiftX) > 5 || Math.abs(shiftY) > 5) {\n        setTimeout(() => {\n          movement = true\n        }, 10)\n      }\n    }\n    document.addEventListener('mousemove', onMouseMove)\n\n    window.onmouseup = () => {\n      document.removeEventListener('mousemove', onMouseMove)\n\n      if (Math.abs(shiftX) > celSize / 2 || Math.abs(shiftY) > (celSize / 3) * 2) {\n        store.changeField(emptyCell, movedItem)\n        movedItem = null\n        checkWinner()\n      }\n\n      setTimeout(() => {\n        movement = false\n      }, 10)\n\n      shiftX = 0\n      shiftY = 0\n      movedItem = null\n    }\n  })\n}\n\nexport default renderField\n","import './infoPanel.scss'\nimport html from './infoPanel.html'\nimport store from '../../store'\nimport { getTimePast } from '../../helpers'\n\nconst infoPanel = () => {\n  const div = document.createElement('div')\n  div.className = 'infoPanel'\n  div.innerHTML = html\n  return div\n}\n\nexport const visibleMoves = (num) => {\n  const infoPanelMovesValue = document.querySelector('.infoPanel__moves-value')\n  store.setMoves(num)\n  infoPanelMovesValue.innerHTML = store.getMoves()\n}\n\nfunction updateClock() {\n  const timesValue = document.querySelector('.infoPanel__times-value')\n  const timeStart = store.getTimeStart()\n  timesValue.innerHTML = getTimePast(timeStart)\n}\nexport function startTimer() {\n  setInterval(updateClock, 1000)\n}\n\nexport default infoPanel\n","import './sizePanel.scss'\nimport html from './sizePanel.html'\nimport store from '../../store'\nimport { createWinFieldArr, shuffleMatrix } from '../../helpers'\n\nimport { visibleMoves } from '../infoPanel/infoPanel'\n\nconst sizePanel = () => {\n  const div = document.createElement('div')\n  div.className = 'sizePanel'\n  div.innerHTML = html\n\n  div.addEventListener('click', (e) => {\n    e.preventDefault()\n    const { size } = e.target.dataset\n    if (size !== undefined) {\n      document.querySelector('.sizePanel__size').innerHTML = `${size}X${size}`\n      document.querySelector('.buttonsPanel__stop').disabled = true\n      store.setSize(size)\n      store.setTimeStart(null)\n      visibleMoves(0)\n      store.setField(shuffleMatrix(store.getSize()))\n      store.setWinField(createWinFieldArr(size))\n    }\n  })\n\n  return div\n}\n\nexport default sizePanel\n","import './winList.scss'\nimport store from '../../store'\n\nconst renderWinList = () => {\n  const size = store.getSize()\n  const div = document.createElement('div')\n  div.className = 'winList'\n  div.innerHTML = `\n    <div class=\"winList__panel\">\n      <div class=\"winList__close-btn\">Close</div>\n    </div>\n    <div class=\"winList__title\">Win list ${size}x${size}</div>\n    <div class=\"winList__head\">\n      <div class=\"winList__item\">name</div>\n      <div class=\"winList__item\">time</div>\n      <div class=\"winList__item\">moves</div>\n    </div>`\n  const winListSize = store.getWinList()\n  winListSize.forEach((elem) => {\n    const item = document.createElement('div')\n    item.className = 'winList__row'\n    item.innerHTML = `\n      <div class=\"winList__item\">${elem.name}</div>\n      <div class=\"winList__item\">${elem.time}</div>\n      <div class=\"winList__item\">${elem.moves}</div>\n    `\n    div.append(item)\n  })\n  div.addEventListener('click', (e) => {\n    e.preventDefault()\n    document.querySelector('.winList').remove()\n  })\n  return div\n}\n\nexport function showWinList() {\n  document.body.append(renderWinList())\n}\n\nexport default renderWinList\n","function toArray(matrix) {\n  return matrix.flat(1)\n}\nexport function toMatrix(arr) {\n  const count = Math.sqrt(arr.length)\n  const result = []\n  for (let i = 0; i < count; i += 1) {\n    const elemI = []\n    for (let j = 0; j < count; j += 1) {\n      elemI.push(arr[i * count + j])\n    }\n    result.push(elemI)\n  }\n  return result\n}\n// * create structure matrix size 2 => [[1,2],[3,0]]\nexport function createWinFieldArr(size) {\n  const arrSize = size * size\n  const newArr = Array(arrSize).fill('')\n  for (let i = 0; i < arrSize; i += 1) {\n    newArr[i] = i === arrSize - 1 ? 0 : i + 1\n  }\n  return newArr\n}\n// !rename to check winner\nexport function checkWin(fieldMatrix, winArr) {\n  const fieldArr = toArray(fieldMatrix)\n  for (let i = 0; i < winArr.length; i += 1) {\n    if (fieldArr[i] !== winArr[i]) {\n      return false\n    }\n  }\n  return true\n}\n// * shuffle matrix\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min)) + min\n}\nfunction getEmptyElement(matrix) {\n  for (let i = 0; i < matrix.length; i += 1) {\n    for (let j = 0; j < matrix.length; j += 1) {\n      if (matrix[i][j] === 0) {\n        return { row: i, col: j }\n      }\n    }\n  }\n  return null\n}\nexport function shuffleMatrix(size) {\n  const matrix = toMatrix(createWinFieldArr(size))\n  const times = getRandomInt(100, 10000)\n\n  for (let i = 0; i < times; i += 1) {\n    const random = getRandomInt(1, 5)\n    const index0 = getEmptyElement(matrix)\n\n    const positions = {\n      1: matrix[index0.row - 1]?.[index0.col] && {\n        row: index0.row - 1,\n        col: index0.col,\n      },\n      2: matrix[index0.row + 1]?.[index0.col] && {\n        row: index0.row + 1,\n        col: index0.col,\n      },\n      3: matrix[index0.row]?.[index0.col - 1] && {\n        row: index0.row,\n        col: index0.col - 1,\n      },\n      4: matrix[index0.row]?.[index0.col + 1] && {\n        row: index0.row,\n        col: index0.col + 1,\n      },\n    }\n    if (positions[random]) {\n      const currentN = matrix[positions[random].row][positions[random].col]\n      matrix[positions[random].row][positions[random].col] = 0\n      matrix[index0.row][index0.col] = currentN\n    }\n  }\n  return matrix\n}\n// * for time\n// * get zero for one number example 1 => 01\nexport function getZero(num) {\n  if (num >= 0 && num < 10) {\n    return `0${num}`\n  }\n  return num\n}\nexport function getTimePast(timeStart) {\n  if (timeStart && timeStart > 0) {\n    const time = new Date(Date.now() - timeStart)\n    return `${getZero(time.getMinutes())}:${getZero(time.getSeconds())}`\n  }\n  return '00:00'\n}\n","import { getTimePast } from './helpers'\n\nlet dataPosition = []\nconst data = {\n  game: null,\n  audio: true,\n  timeStart: null,\n  moves: 0,\n  size: 4,\n  results: [],\n  winField: [\n    [1, 2, 3, 4],\n    [5, 6, 7, 8],\n    [9, 10, 11, 12],\n    [13, 14, 15, 0],\n  ],\n  winList: {\n    3: [],\n    4: [],\n    5: [],\n    6: [],\n    7: [],\n    8: [],\n  },\n}\n\nconst getGame = () => data.game\nconst setGame = (action) => {\n  data.game = action\n}\nconst getMoves = () => data.moves\nconst getAudio = () => data.audio\nconst setAudio = (action) => {\n  data.audio = action\n}\nconst setMoves = (action) => {\n  if (!action) {\n    data.moves = 0\n  } else {\n    data.moves += action\n  }\n}\nconst getTimeStart = () => data.timeStart\nconst setTimeStart = (action) => {\n  data.timeStart = action\n}\n\nconst getField = () => dataPosition\nconst getSize = () => data.size\nconst setSize = (n) => {\n  data.size = n\n}\nconst getResults = () => data.results\nconst setField = (matrix) => {\n  dataPosition = matrix\n}\nconst changeField = (emptyCell, hoveredItem) => {\n  const currentN = dataPosition[hoveredItem.row][hoveredItem.col]\n  dataPosition[hoveredItem.row][hoveredItem.col] = 0\n  dataPosition[emptyCell.row][emptyCell.col] = currentN\n}\nconst getWinField = () => data.winField\nconst setWinField = (arr) => {\n  data.winField = arr\n}\nconst getWinList = () => data.winList[data.size]\n\nconst setWinList = (obj) => {\n  data.winList = obj\n}\nconst addToWinList = (name) => {\n  if (name) {\n    const winListForSize = data.winList[data.size]\n    const obj = {\n      name,\n      timeMs: Date.now() - data.timeStart,\n      time: getTimePast(data.timeStart),\n      moves: data.moves,\n    }\n    if (winListForSize.length < 10) {\n      data.winList[data.size] = winListForSize.concat(obj)\n    } else {\n      const arrForSort = winListForSize.concat(obj).sort((a, b) => {\n        if (a.moves > b.moves) return 1\n        if (a.moves < b.moves) return -1\n        if (a.timeMs > b.timeMs) return 1\n        if (a.timeMs < b.timeMs) return -1\n        return 1\n      })\n      arrForSort.pop()\n      data.winList[data.size] = arrForSort\n    }\n    localStorage.setItem('setWinListSaveObject', JSON.stringify(data.winList))\n  }\n}\n\nconst store = {\n  getField,\n  getMoves,\n  getTimeStart,\n  getSize,\n  setSize,\n  getResults,\n  setField,\n  setMoves,\n  setTimeStart,\n  setWinField,\n  changeField,\n  getWinField,\n  getWinList,\n  setWinList,\n  addToWinList,\n  getAudio,\n  setAudio,\n  getGame,\n  setGame,\n}\nexport default store\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = document.baseURI || self.location.href;\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t\"main\": 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// no jsonp function","import container from './components/container/container'\nimport { fieldHandler } from './components/field/field'\nimport { startTimer, visibleMoves } from './components/infoPanel/infoPanel'\nimport { shuffleMatrix } from './helpers'\nimport store from './store'\n\ndocument.body.append(container())\nfieldHandler()\nstartTimer()\nstore.setTimeStart(null)\nstore.setField(shuffleMatrix(store.getSize()))\n\nconst save = localStorage.getItem('rssGemPuzzleSaveObject')\nif (save) {\n  const answer = window.confirm('Хотите продолжить сохраненную игру? При отказе игра будет удалена')\n  if (answer) {\n    const saveObj = JSON.parse(save)\n    store.setField(saveObj.dataPosition)\n\n    visibleMoves(saveObj.moves)\n    store.setWinField(saveObj.winField)\n    store.setTimeStart(saveObj.gameTime ? Date.now() - saveObj.gameTime : null)\n    store.setSize(saveObj.size)\n  } else {\n    localStorage.removeItem('rssGemPuzzleSaveObject')\n  }\n}\nconst winList = localStorage.getItem('setWinListSaveObject')\nif (winList) {\n  const saveObj = JSON.parse(winList)\n  store.setWinList(saveObj)\n}\n"],"names":[],"sourceRoot":""}